name: Docker Image Build & Push for PR Updates

on:
  push:
  # pull_request:
  #   types: [opened, synchronize, reopened, edited]
    branches:
      - main
    paths:
      - "docker-config-*.yaml"
jobs:
  detect-updates:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.detect-configs.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full diff

      - name: Detect updated docker-config files
        id: detect-configs
        shell: bash
        run: |
          git fetch origin main  # Replace with your default branch if not 'main'
          BASE_COMMIT=$(git merge-base HEAD origin/main)

          echo "üîç Comparing changes from $BASE_COMMIT to HEAD..."
          UPDATED_FILES=$(git diff --name-only --diff-filter=AMCR "$BASE_COMMIT" HEAD | grep "docker-config.*\.yaml" || true)

          if [[ -z "$UPDATED_FILES" ]]; then
            echo "matrix=[]" >> "$GITHUB_OUTPUT"
          else
            JSON_ARRAY=$(echo "$UPDATED_FILES" | jq -R -s -c 'split("\n") | map(select(. != ""))')
            echo "matrix=$JSON_ARRAY" >> "$GITHUB_OUTPUT"
          fi
  build:
    needs: detect-updates
    runs-on: self-hosted
    if: needs.detect-updates.outputs.matrix != '[]'
    strategy:
      matrix:
        config_file: ${{ fromJson(needs.detect-updates.outputs.matrix || '[]') }}
    permissions:
      id-token: write
      contents: read    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Variables from Config File
        id: extract-vars
        uses: ./.github/actions/extract-config-file
        with:
          config_file: ${{ matrix.config_file }}

      - name: Extract AWS Account Number
        uses: ./.github/actions/extract-account-number
        with:
          acc_name: ${{ steps.extract-vars.outputs.acc_name }}

      - name: Validate Dockerfile Path
        run: |
          if [[ ! -f "$dockerfile_location" ]]; then
            echo "‚ùå Dockerfile not found at $dockerfile_location. Exiting."
            exit 1
          fi
      # - name: Notify Build Started
      #   uses: ./.github/actions/slack-build-start
      #   with:
      #     slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
      #     channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
      #     repository: ${{ env.ecr_repo_name }}
      #     image_tag: ${{ env.release_tag }}

          
      - name: Build Docker image
        id: docker-build
        run: |
          docker build --no-cache . -f ${{ env.dockerfile_location }} -t ${{ env.account_number }}.dkr.ecr.${{ env.region }}.amazonaws.com/${{ env.ecr_repo_name }}:${{ env.release_tag }}

